1. Find the names and email addresses of all students 
db.students.find({},{name:1, email:1})

2.calculate  the average rating for each countries
db.ratings.aggregate([{
    $group : {_id: ": "$courseID",
    avgrating : {$avg:"$rating"}}
},
{
$lookup :{ from: "courses" , localField : "_id", foreign: "id", as : "courses"
}},
{$unwind: "$courses"},
{
    $project : {
        _id:0
        courseName: "$course.name",
        averrating: 1
    }
}

])

3. calculate the total number of courses taken by each students
db.purchases.aggregate([{
    $group : {
        _id: "$studentID",
        totalCourses : {$sum:1}
    }
    ,
    {
        $lookup: {
            from: "$students", localField:"_id", foreignField: "id", as : "student"
        }
    },
    {$unwind: "$student"},
    {
        $project: {
            _id : 0
            studentName: "$student.name",
            totalCourses:1
        }
    }
}])

4. find the highest rating for each courses
db.ratings.aggregate([{
    $group: _id: "$courseID", highestrating: {$max:"$rating"}

},
{
    $lookup: {
        from: "courses", localField:"_id",foreignField:"id", as: "course"
    },
    {$unwind:"$course"},
    {
        $project: {
            _id:0,
            courseName:"$course.name",
            highestrating: 1
        }
    }
}])

5.find the top 3 courses with highest average ratings.
db.ratings.aggregate([{
    $group:{
        _id:"$courseID", averrating:{$avg:"$rating"}
    },
    {$lookup:{
        from:"courses", localField:"_id",foreignField:"id", as: "course"
    }
    },
    {$unwind:$course"},
    {$project:{
        _id:0,
        courseName:"$course.name",
        averrating:1
    }},
    {$sort:{averrating: -1}},
    {$limit:3}
}])

6.list  the names and email addresses of instructios with phd
db.instructors.find({qualification:{$regex:/"Ph.D","$option:"i"/ }},
{name: 1, email: 1, _id:0})

7.calculate  the total number of courses
db.purchases.aggregate([
  {
    $lookup: {
      from: "students",
      localField: "studentID",
      foreignField: "id",
      as: "student"
    }
  },
  { $unwind: "$student" },
  { $match: { "student.name": /Smith/ } },
  { $group: { _id: null, totalCourses: { $sum: 1 } } }
])

8. find the courses with the lowest price
db.ratings.aggregate([
  {
    $group: {
      _id: "$courseID",
      averageRating: { $avg: "$rating" }
    }
  },
  {
    $lookup: {
      from: "courses",
      localField: "_id",
      foreignField: "id",
      as: "course"
    }
  },
  { $unwind: "$course" },
  {
    $project: {
      _id: 0,
      courseName: "$course.name",
      averageRating: 1
    }
  },
  { $sort: { averageRating: 1 } },
  { $limit: 1 }
])

9. find the courses with most purchases
db.purchases.aggregate([
  {
    $group: {
      _id: "$courseID",
      totalPurchases: { $sum: 1 }
    }
  },
  {
    $lookup: {
      from: "courses",
      localField: "_id",
      foreignField: "id",
      as: "course"
    }
  },
  { $unwind: "$course" },
  {
    $project: {
      _id: 0,
      courseName: "$course.name",
      totalPurchases: 1
    }
  },
  { $sort: { totalPurchases: -1 } },
  { $limit: 1 }
])

10.find the courses with the highest
db.ratings.aggregate([
  {
    $group: {
      _id: "$courseID",
      numberOfRatings: { $sum: 1 }
    }
  },
  {
    $lookup: {
      from: "courses",
      localField: "_id",
      foreignField: "id",
      as: "course"
    }
  },
  { $unwind: "$course" },
  {
    $project: {
      _id: 0,
      courseName: "$course.name",
      numberOfRatings: 1
    }
  },
  { $sort: { numberOfRatings: -1 } },
  { $limit: 1 }
])